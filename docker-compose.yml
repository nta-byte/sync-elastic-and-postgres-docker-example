services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=codelibs-es
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    volumes:
      #      - elasticsearch/plugins:/usr/share/elasticsearch/plugins
      #      - type: bind
      #        source: ./elasticsearch/data01
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    environment:
      - "ELASTICSEARCH_HOSTS=http://es01:9200"
    ports:
      - 5601:5601
    networks:
      - esnet
    depends_on:
      - es01

  database:
    build:
      context: .
      dockerfile: PostgresDockerfile
    container_name: database
    ports:
      - "5433:5433"
    volumes:
      - ./pg-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  redis:
    image: 'redis:alpine'
    container_name: redis
    ports:
      - '6379:6379'

  pgsync:
    build:
      context: .
      dockerfile: PgsyncDockerfile
    container_name: pgsync
    environment:
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DATABASE=postgres
      - PG_HOST=database
      - ELASTICSEARCH_HOST=es01
      - REDIS_HOST=redis

volumes:
  esdata01:
    driver: local

networks:
  esnet:
    driver: bridge